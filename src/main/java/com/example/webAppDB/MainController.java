package com.example.webAppDB;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called CRUD userRepository // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        System.out.println("TEST/add: ");
        User n = new User();
        n.setName(name);
        n.setEmail(email);

        List<User> answer = userRepository.findByNameAndEmail(name, email);
        System.out.println("found matches:" + answer.size());
        if (!answer.isEmpty()){
            //List<User> users = userRepository.findAll(Example.of(n));
            for (User user:answer){
                System.out.println(user.toString());
            }
            return  "user already exists!";
        } else {
            userRepository.save(n);
            return "Saved";
        }

        //return userRepository.findOne(saved.getId());
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        System.out.println("TEST/all: ");
        return userRepository.findAll();
    }
}
